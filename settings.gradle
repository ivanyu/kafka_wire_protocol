// Licensed to the Apache Software Foundation (ASF) under one or more
// contributor license agreements.  See the NOTICE file distributed with
// this work for additional information regarding copyright ownership.
// The ASF licenses this file to You under the Apache License, Version 2.0
// (the "License"); you may not use this file except in compliance with
// the License.  You may obtain a copy of the License at
//
//    http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

plugins {
    id 'com.gradle.develocity' version '3.19'
    id 'com.gradle.common-custom-user-data-gradle-plugin' version '2.0.2'
}

def isGithubActions = System.getenv('GITHUB_ACTIONS') != null
def currentJvm = JavaVersion.current()

develocity {
    server = "https://develocity.apache.org"
    projectId = "kafka"
    buildScan {
        uploadInBackground = !isGithubActions
        publishing.onlyIf { it.authenticated }
        obfuscation {
            // This obfuscates the IP addresses of the build machine in the build scan.
            // Alternatively, the build scan will provide the hostname for troubleshooting host-specific issues.
            ipAddresses { addresses -> addresses.collect { address -> "0.0.0.0"} }
        }
        if (isGithubActions) {
            tag "github"
        } else {
            tag "local"
        }
        tag "JDK$currentJvm"
    }
}

buildCache {
    local {
        // This allows the build cache to be used locally or on GitHub Actions.
        // Using the cache on GH should be safe since each job is run on a new VM
        enabled = true
    }

    remote(develocity.buildCache) {
        enabled = false
    }
}

include 'clients',
    'generator',
    'java-tester'

rootProject.name = 'kafka_wire_protocol_generator'
